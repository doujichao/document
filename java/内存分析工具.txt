内存分析工具

常用的数据
---------------------------
	1、运行日志
	2、异常堆栈
	3、GC日志
	4、线程快照(threaddump/javacore文件)
	5、堆转储快照(headhump/hropf文件)
	
	
jps:JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程
	jps [options] [hostid]
		options:
				-q:只输出LVMID，省略主类名
				-m:输出虚拟机进程启动时传输给主类main()函数的参数
				-l:输出主类的全名，如果进程执行的时Jar包，输出Jar路径
				-v:输出进程启动时的虚拟机参数
		hostid:主机id		
jstat:JVM statistics Monitoring Tool,用于收集HotSpot虚拟机各方面的运行数据
	jstat [option vmid [interval[s|ms] [count]]]
		options
			-class 监视类装载，卸载数量，总空间以及类装载所耗时间
			-gc	监视java堆状况，包括Eden区，2个Survior区，老年代，永久代等的容量，已用空间
				GC时间合计等信息
			-gccapacity	监视内容与-gc基本相同，但输出主要关注java堆各个区域使用的最大和
				最小空间
			-gcutil	监视内容和-gc基本相同，但是输出主要关注已使用空间占总空间的百分比
			-gccause 与-gcutil功能一样，但是会额外输出导致上一次GC产生的原因
			-gcnew	监视新生代GC的状况
			-gcnewcapacity 监视内容与-gcnew基本相同，输出主要关注使用的最大和最小空间
			-gcold 监视老年代GC的状况
			-gcoldcapacity 监视内容与-gcold基本相同，输出主要关注使用的最大和最小空间
			-gcpermpation 输出永久代使用的最大和最小空间
			-compiler 输出JIT编译器编译过的方法和耗时等信息
			-printcompilation 输出已经被JIT编译过的方法
		vmid 
			如果是本地进程，vmid和Lvmid是一致的
			如果是远程进程，vmid的格式应该为[protocal:][//]lvmid[@hostname[:port]/servername]
		interval
			查询间隔
		count
			次数
		注意：查询间隔和查询次数如果省略默认查询一次	
jinfo:Configuration info for java,显示虚拟机配置信息
	jinfo [option] pid
jmap:Memory Map for java,生成虚拟机的内存转储快照（heapdump文件）
	使虚拟机生成dump文件的方式
		1、-XX:+HeapDumpOnOutOfMemoryError 使虚拟机在内存溢出的时候生成dump文件
		2、-XX:+HeapDumpOnCtrlBreak	使虚拟机可以使用[ctrl]+[break]键生成dump文件
		3、在linux系统下通过kill -3生成dump文件
		4、jstack 
		5、jmap 使用-dump 来生成dump文件
		jmap [option] vmid
			option:
				-dump :生成java堆转存储快照，格式为 -dump:[live,] format=b,file=<filename>,
						其中live参数说明只dump出存活的对象
				-finalizerinfo:显示在F-Queue中等待Finalize线程执行finalize方法的对象，
						只在linux平台有效
				-heap:显示java堆详细信息，如使用哪种回收器，参数配置，分代状况，只在
						linuc平台有效
				-histo:显示堆中对象统计信息，包括类、实例数量和合集容量
				-permstat:以Classloader为统计口径显示永久带内存状态，只在linux有效
				-F ：当虚拟机进程堆-dump选项没有响应使，可使用这个选项强制生成dumpkuaizhao	
					只在linux平台有效
jhat:JVM Heap Dump Browser,用于分析heapdump文件，它会建立一个Http/Html
	服务器，让用户可以在浏览器上查看分析结果
jstack:Stack Trace for java,显示虚拟机的线程快照
	jstack [option] vmid
		option:
			-F ：当正常输出的请求不被响应时，强制输出线程栈
			-l:	除堆栈外，显示关于锁的附加信息，
			-m: 如果调用本地方法的话，可以显示c/c+=的堆栈
			
			
jdk的可视化工具
---------------------------------
	jconsole:
	jvisualvm:
		插件安装https://visualvm.github.io/pluginscenters.html
		生成dump文件两种方式：
			1、在‘应用程序’窗口中单机应用程序节点，选择‘堆dump’
			2、打开应用程序标签，在‘监视’标签中单击‘堆dump’