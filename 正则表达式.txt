
元字符：具有特殊含义的字符
字符组[]：其中只有两个元字符 ，匹配字符组内的任意一个字符
	1、^ :表示排除 例如：[^c]可以匹配除c之外的1个字符
	2、-：连字符，可以表示范围 例如：[a-c]表示匹配a到c的小写字母
	
	
量词：
	1、? 表示有一个或者没有   ------ 问一下？有 1个 无 没有
	2、* 可以匹配任意多个字符	------ 可以没有
	3、+ 可以匹配任意多个字符	------ 不能没有，至少一个
分界符：	
	1、^ 界定开始
	2、$ 界定结束
多选分支：
	|

范围{min,max}

括号()的两种用途：
	1、限制多项式的范围
	2、将若干字符组合成一个单元（又被称为反向引用）,匹配重复字符
		():分组并且捕获;捕获的值可以通过 \n 来获得到第n组捕获的值
			\1 : 表示前面的第一个括号匹配到的字符串，
			例如：the223the2332  --- (the)([0-9]*)\1\2	\1匹配到了the,\2没有匹配到，\2如果想要匹配字符串应该是223 
		(?:):分组但是不进行捕获,效率相对于捕获型括号更高
		
转义字符：\	将元字符转换为普通字符串
																   |
肯定环视：相当于找一个可以匹配的位置，可以类比边界符               V
	顺序环视：(?=...)，从左巡视找到匹配的字符串的左端 (?=aaa)  bsfh aaa fd 
	逆序环视：(?<=...)，从右巡视找到匹配的字符串的右端 (?<=aaa) bsfh aaa fd
                                                                   |    ^
否定环视														   V	|
	顺序环视：(?!...)，从左巡视找到匹配的字符串的左端 (?!aaa)  bsfh aaa fd 
	逆序环视：(?<!...)，从右巡视找到匹配的字符串的右端 (?<!aaa) bsfh aaa fd	
                                                                        ^
		                                                                |
几种常见的匹配：                                                        
	1、匹配32位变量名:[a-zA-Z_][a-zA-Z_0-9]{0,31}
	2、匹配引号内的字符串："[^"]*"
	3、匹配3位小数美元金额: \$([0-9]|[1-9]([0-9]?){0,2}(,[0-9]{3})*)(\.[0-9]{0,3})?
	4、匹配Html url：[http|ftp|https]://(\w)+(\.[-\w\d]+){1,3}(/[-_\w\d])*(\.[\w]+)?(.=.)*
	5、匹配时间：[0-9]?[0-9]:[0-9][0-9] (am|pm)
	
几种元字符：
	回车换行制表符：
		\t:制表符
		\n:换行符
		\r:回车符
		\f:换页符
	特殊：
		\a:报警符	
		\e:转义符(\u001B)
	数字：
		\d:数字
		\D:非数字
	空白：
		\s:空白字符
		\S:非空白字符
	单词：
		\w:单词字符
		\W:非单词字符
	
	边界符：
		^:行的开头
		$:行的结尾
		\b:单词边界
		\B:非单词边界
		\A:输入的开头
		\G:上一个匹配的结尾
		\Z:输入的结尾，仅用于最后的结束符
		\z:输入的结尾
		
		\p{P}:p表示property的意思，P表示七个字符属性之一：标点字符
			其他六个字符属性：
			L：字母
			M：标记符号
			Z：分隔符（空格，换行符）
			S：符号（数学符号，货币符号）
			N：数字（阿拉伯数字，罗马数字）
			C：其他字符