在window下使用gcc的条件
1、提前安装gcc这个软件
	
C的元素：
	1、include头文件是要告诉编译器，包含一个头文件
	2、在c语言中，任何库函数调用都需要提前包含头文件
	3、main函数有且只有一个
	4、System系统函数执行操作系统的命令，或者运行指定的命令需要include<stdlib.h>
C编译过程：
	预编译   ------>  编译  ---------> 链接
	.c 文件 							可执行程序
gcc -E -o a.e:预编译a.c文件，生成文件位a.e
预编译是将include包含的头文件内容替换到.c文件中，同时将代码中的注释删除

编译指令 gcc 文件名 -o 输出文件
查看汇编指令：
	objdump -S -M intel 文件名

指针基础：
	一个指针其实只是一个变量，存储数据在内存中的地址而不是存储数据本身
	空指针：当指针不指向任何数据的时候，也成为空指针
	声明指针：type(int) *iptr,a, -------a为变量，iptr为指针
	指针赋值：*iptr=100			--------100赋值给*iptr所指的位置
	对于数组来说，通常是将数组名当作一个不可变的指针来使用
	
泛型指针：并不指定特定具体的数据类型，void类型指针，在进行具体计算的时候需要进行类型转换
函数指针：指向可执行代码段或调用可执行代码段的信息块的指针

多维数组，a[][2] 在初始化的时候必须指定第一维的大小，因为我们想要访问任意一行的元素
	需要知道这一行需要跳几个元素

用途：
	1、用来引用数据集合
	2、作为函数参数，按引用传递	
	
// 链表
typedef struct listElmt_ { //定义结构体本名
	void *data;
	struct listElmt_ *next;
} ListElmt; //结构体别名

//定义函数
int f() {
	int a[10], *iptr;
	iptr = a;
	iptr[0] = 5;
	return 0;
}
注意：要访问第i个元素，可以使用a[i]表示，也可以使用*(a+i)表示

结构和数组
--------------------
	结构：通常是由各种各样的有序的元素组成的，可以被看成是单个连续的数据类型
	结构指针：
	
分配存储空间：
	声明一个变量：当声明一个变量的时候，编译器会根据变量的类型预留足够的内存空间
	运行时动态地分配存储空间